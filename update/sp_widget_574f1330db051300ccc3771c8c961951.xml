<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope,spUtil,$sce,$rootScope) {
	var c = this;

	//update breadcrumbs
	$rootScope.$broadcast('sp.update.breadcrumbs', c.data.breadcrumbs);
	//permit content to be rendered in html
	$scope.data.u_content = $sce.trustAsHtml($scope.data.u_content);

	//fill in notes field with previous input
	$scope.notes = $scope.data.u_personal_notes;

	//Hide button if input is invalid
	c.checkValid = function(){
		if ($( '#my_notes' ).hasClass( 'ng-invalid' )){
			$( '#save_button' ).hide();
		}
		else $( '#save_button' ).show();
	}

	//sends event to server that module is started or completed
	c.nextState = function(action){
		c.data.action = action;
		c.server.update().then(function() {
			c.data.action = undefined;
			spUtil.update($scope);
			$scope.data.u_content = $sce.trustAsHtml($scope.data.u_content);
		})
	}	
	c.saveNotes = function(action){
		c.data.action = action;
		c.data.notes = $scope.notes;
		c.server.update().then(function() {
			c.data.action = undefined;
			spUtil.update($scope);
		})
	}	
}
]]></client_script>
        <controller_as>c</controller_as>
        <css>.list-group-item {
  padding: 5px;
  border: none;
}

.summary {
	font-weight: bold;
}

.notes{
  flex: 1 1 auto;
  width: 100%;
  height: 100px;
  min-width: 100px;
  overflow-wrap: break-word;
  word-wrap: break-word;
  vertical-align: top;
}

.ng-invalid{
  color : red;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>glyph,title,color</field_list>
        <has_preview>false</has_preview>
        <id>my-module-details</id>
        <internal>false</internal>
        <link/>
        <name>My module details</name>
        <option_schema>[{"name":"max_number","section":"Presentation","label":"Max number","type":"integer"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	data.action = "";
	var tf_module = $sp.getParameter('sys_id');
	var z = new GlideRecord('x_206907_devo_tf_module_instance');
	z.get(tf_module);
	var user = gs.getUserID();
	var a = {};
	$sp.getRecordValues(data, z, 'number,short_description,description,sys_id,content,number_of_available_places,personal_notes');
	data.status= z.getDisplayValue('state');
 	//data.a = data.status;
	$sp.getRecordDisplayValues(data, z, 'instructor,training_type');
	data.state = z.state.getDisplayValue();
		data.sys_id = z.sys_id;
//	data.support = z.support.getDisplayValue();
//	data.supportlink = z.support.getValue();
//	data.supporttitle =  z.support.short_description.getValue();
  data.title = z.short_description.getDisplayValue();
	if(z.schedule)
		data.schedule = z.schedule.getDisplayValue();
if(z.start){
		//data.u_start = z.u_start.getGlideObject().getLocalDate().getDisplayValue();
		//var startTime = z.u_start.getValue();
//var startTime = GlideDateTime().getDate().getValue();
	  data.start = z.start.getDisplayValue();
		var startTime = z.start.getDisplayValue();
		var sTimeArray = startTime.split(' ');
		data.start_time = sTimeArray[1];
	}
	if(z.end){
		//data.u_end = z.u_end.getGlideObject().getLocalDate().getDisplayValue();
	//	var endTime = GlideDateTime().getDate().getValue();
		data.end = z.end.getDisplayValue();
    var endTime = z.end.getDisplayValue();
		var sEndTimeArray = endTime.split(' ');
		data.end_time = sEndTimeArray[1];
	}

	data.duration = z.duration_resolution.getDisplayValue();
	//Breadcrumbs
	var rec = z.from_training.getRefRecord();	
	data.breadcrumbs = [{label: data.title, url: '#'}];
	data.breadcrumbs.unshift({label: rec.getDisplayValue(), url: '?id=tf_modins&sys_id=' + rec.getUniqueValue()});
	data.allmyti = gs.getMessage("All My Trainings");
	data.breadcrumbs.unshift({label: data.allmyti, url: '?id=tf_allmyti'});


	if (!input){
		return;
	}
	else if (input.action){
		if (input.action == 'start' || input.action == 'complete'){
			z.state +=1 ;
		data.state = z.state.getDisplayValue();}
		// KAS : personal notes input
		else if (input.action == 'saveNotes'){
			z.personal_notes = input.notes;
		}
		
		z.update();
	}
})()

]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>ccouble</sys_created_by>
        <sys_created_on>2018-03-22 15:38:51</sys_created_on>
        <sys_id>574f1330db051300ccc3771c8c961951</sys_id>
        <sys_mod_count>52</sys_mod_count>
        <sys_name>My module details</sys_name>
        <sys_package display_value="Transformation Factory" source="x_206907_devo_tf">2bd67e33db301300ccc3771c8c961947</sys_package>
        <sys_policy/>
        <sys_scope display_value="Transformation Factory">2bd67e33db301300ccc3771c8c961947</sys_scope>
        <sys_update_name>sp_widget_574f1330db051300ccc3771c8c961951</sys_update_name>
        <sys_updated_by>anoufel</sys_updated_by>
        <sys_updated_on>2018-04-25 09:48:46</sys_updated_on>
        <template><![CDATA[<!-- <pre> {{data|json}}</pre> -->
<div class="panel panel-{{options.color}}">
  <div class="panel-heading"> 
    <h2 class="h4 panel-title">
      <fa ng-if="::options.glyph.length" name="::{{options.glyph}}" class="m-r-sm" />
      <span>${Module} - {{::data.number}} - {{::data.short_description}}</span>
    </h2>
  </div>
  <div class="panel-body">
    <div class="list-group">
      <div class="list-group-item">
        <div ng-if="data.schedule" class="summary">
          <span class="col-lg-3">${Schedule : }</span><span class="col-lg-9">{{data.schedule}}</span>
        </div>

        <div ng-if="data.status == '1' && data.training_type == 'E-Learning'"class="btn btn success m-b"  ng-click="c.nextState('start')">${Start Module}</div>   
        <div ng-if="data.status == '2' && data.training_type == 'E-Learning'" class="btn btn-success m-b" ng-click="c.nextState('complete')">${Complete Module}</div>  

        <div ng-if="data.description" class="summary">
          <span class="col-lg-3">${Description} : </span>
          <span class="col-lg-9" >{{data.description}}</span>
        </div>

        <div ng-if="data.state" class="summary">
          <span class="col-lg-3">${State} : </span>
          <span class="col-lg-9" >{{data.state}}</span>
        </div>
        <div ng-if="data.start" class="summary">
          <span class="col-lg-3">${Started} : </span>
          <span class="col-lg-9" >{{data.start}} ${at} {{data.start_time}}</span>
        </div>
        <div ng-if="data.end" class="summary">
          <span class="col-lg-3">${Ended} : </span>
          <span class="col-lg-9" >{{data.end}} ${at} {{data.end_time}}</span>
        </div>
        <div ng-if="data.duration_resolution !== 'undefined' && data.end" class="summary">
          <span class="col-lg-3">${Duration} : </span>
          <span class="col-lg-9" >{{data.duration_resolution}}</span>
        </div>
        &nbsp;
        <div ng-if="data.support" class="summary">
          <span class="col-lg-3">${Material} : </span>
          <a href="?id=kb_article&sys_id={{::data.supportlink}}">
            <span class="col-lg-9">{{data.support}} - {{data.supporttitle}}</span>
          </a>
        </div>
        <div ng-show="data.content && data.status >= 2">
          <hr/>
          &nbsp;
          <div ng-bind-html="data.content" style="overflow-x:auto;">
          </div>
        </div>  
        &nbsp;
        <div>
          <hr/>
          <form>
            <label>${Personal Notes} :</label>              
            <textarea ng-keypress="c.checkValid()" id="my_notes" type="text" name="notes" ng-model="notes" ng-minlength="3" ng-maxlength="1000" size="1000" class="notes"></textarea>
          </form>
          <br/>
          &nbsp;
          <div id="save_button" class="btn btn-success m-b" ng-click="c.saveNotes('saveNotes')">${Save Notes}</div>
        </div><!-- end input-->
      </div>
    </div>
  </div>
</div>
<!--<pre>{{data|json}}</pre>-->
<!--<pre>{{data.content|html}}</pre>-->
]]></template>
    </sp_widget>
</record_update>
